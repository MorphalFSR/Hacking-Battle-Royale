APPROVED = 'APPROVED'  # Correct username and password
ICUSER = 'ICUSER'  # InCorrect Username
ICPASS = 'ICPASS'  # InCorrect Password
HACKED = 'HACKED'
HACKING = 'HACKING'
LOGIN = 'LOGIN'
LOGOUT = 'LOGOUT'
QUIT = 'QUIT'
BLOCKED = 'BLOCKED'
UNBLOCKED = 'UNBLOCKED'
TRANSFER = 'TRANSFER'
CREATEACCOUNT = 'CREATEACCOUNT'
CREATELOBBY = 'CREATELOBBY'
TAKEN = 'TAKEN'
LOBBIES = 'LOBBIES'
ADDLOBBIES = 'ADDLOBBIES'
REMLOBBIES = 'REMLOBBIES'
JOIN = 'JOIN'
JOINED1 = 'JOINED1'
JOINED2 = 'JOINED2'
FULL = 'FULL'
LOSE = 'LOSE'
EXITED = 'EXITED'
LOBBYDATA = 'LOBBYDATA'
IVUSER = 'IVUSER'  # InValid Username
IVPASS = 'IVPASS'  # InValid Password
EXIT = 'EXIT'
ADMIN = 'ADMIN'
START = 'START'
CHANGEPASS = 'CHANGEPASS'
WIN = 'WIN'

BREAK = '$'
SPACE = '#'

CLIENT_RESPONSE_KEYS = [APPROVED, ICUSER, ICPASS, HACKED, BLOCKED, UNBLOCKED, LOGOUT, HACKING, TAKEN, LOBBIES,
                        ADDLOBBIES, REMLOBBIES, JOINED1, JOINED2, FULL, LOSE, EXITED, LOBBYDATA, IVUSER, IVPASS, ADMIN,
                        START, CHANGEPASS, WIN]
SERVER_RESPONSE_KEYS = [LOGIN, QUIT, LOGOUT, CREATEACCOUNT, TRANSFER, LOBBIES, JOIN, LOBBYDATA, EXIT, START]


def construct_message(cmd, *args):
    txt = cmd
    for a in args:
        txt += SPACE + str(a)
    txt += BREAK
    return txt.encode()


def deconstruct_message(message):
    split_message = message.split(SPACE)
    return split_message[0], split_message[1:]
